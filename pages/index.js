import Head from "next/head"
import styles from "../styles/Home.module.css"
import { createUrqlClient } from "../src/utils/createUrqlClient"
import { withUrqlClient } from "next-urql"
import { useLocationsQuery } from "../src/generated/graphql"
import { StoreHours } from "../src/components/StoreHours"
import * as ReactDOM from "react-dom"
import { Formik, Field, Form, FormikHelpers } from "formik"

const Home = () => {
  const [{ data, fetching }] = useLocationsQuery()

  if (!fetching && data.locations) {
    data.locations.map((location) => {
      Object.keys(location).forEach((key) => {
        try {
          location[key] = JSON.parse(location[key])
        } catch {
          location[key] = location[key]
        }
      })
    })
    console.log("parsed", data.locations[0].hours)
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {!fetching && data ? (
          data.locations.map((location) => (
            <>
              <p>
                {location.name} - {location.c_locationShortName || ""}
              </p>
              <p>{location.address["line1"]}</p>
              <StoreHours hours={JSON.stringify(location.hours)} />
              {/* <p>{JSON.parse(location.hours).monday.openIntervals}</p> */}
              <Formik
                initialValues={{
                  line1: location.address.line1 || "",
                  city: location.address.city || "",
                  state: location.address.region || "",


                }}
                onSubmit={async (values) => {
                  await new Promise((r) => setTimeout(r, 500))
                  alert(JSON.stringify(values, null, 2))
                }}>
                <Form>
                  <label htmlFor="line1">Street</label>
                  <Field id="line1" name="line1" placeholder="Jane" />
                
                  <label htmlFor="city">City</label>
                  <Field id="city" name="city" placeholder="City" />
                  <label htmlFor="state">state</label>
                  <Field id="state" name="state" placeholder="state" />


                  <button type="submit">Submit</button>
                </Form>
              </Formik>
            </>
          ))
        ) : (
          <h1>Loading</h1>
        )}
      </main>

      <footer className={styles.footer}></footer>
    </div>
  )
}
export default withUrqlClient(createUrqlClient, { ssr: false })(Home)
